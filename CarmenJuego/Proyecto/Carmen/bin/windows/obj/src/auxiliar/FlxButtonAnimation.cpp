// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_auxiliar_FlxButtonAnimation
#include <auxiliar/FlxButtonAnimation.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxCamera
#include <flixel/FlxCamera.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_input_FlxInput
#include <flixel/input/FlxInput.h>
#endif
#ifndef INCLUDED_flixel_input_FlxPointer
#include <flixel/input/FlxPointer.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInput
#include <flixel/input/IFlxInput.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInputManager
#include <flixel/input/IFlxInputManager.h>
#endif
#ifndef INCLUDED_flixel_input_mouse_FlxMouse
#include <flixel/input/mouse/FlxMouse.h>
#endif
#ifndef INCLUDED_flixel_input_mouse_FlxMouseButton
#include <flixel/input/mouse/FlxMouseButton.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_utils_Assets
#include <openfl/utils/Assets.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_bdb32f465ea5ef0b_14_new,"auxiliar.FlxButtonAnimation","new",0x1e88666d,"auxiliar.FlxButtonAnimation.new","auxiliar/FlxButtonAnimation.hx",14,0xbaaf5002)
HX_LOCAL_STACK_FRAME(_hx_pos_bdb32f465ea5ef0b_34_setUp,"auxiliar.FlxButtonAnimation","setUp",0xff3f85ea,"auxiliar.FlxButtonAnimation.setUp","auxiliar/FlxButtonAnimation.hx",34,0xbaaf5002)
HX_LOCAL_STACK_FRAME(_hx_pos_bdb32f465ea5ef0b_39_setDown,"auxiliar.FlxButtonAnimation","setDown",0xe75f59b1,"auxiliar.FlxButtonAnimation.setDown","auxiliar/FlxButtonAnimation.hx",39,0xbaaf5002)
HX_LOCAL_STACK_FRAME(_hx_pos_bdb32f465ea5ef0b_44_setOver,"auxiliar.FlxButtonAnimation","setOver",0xeea9f2a3,"auxiliar.FlxButtonAnimation.setOver","auxiliar/FlxButtonAnimation.hx",44,0xbaaf5002)
HX_LOCAL_STACK_FRAME(_hx_pos_bdb32f465ea5ef0b_48_update,"auxiliar.FlxButtonAnimation","update",0x6fea761c,"auxiliar.FlxButtonAnimation.update","auxiliar/FlxButtonAnimation.hx",48,0xbaaf5002)
HX_LOCAL_STACK_FRAME(_hx_pos_bdb32f465ea5ef0b_75_isTouchingButton,"auxiliar.FlxButtonAnimation","isTouchingButton",0x251c4c32,"auxiliar.FlxButtonAnimation.isTouchingButton","auxiliar/FlxButtonAnimation.hx",75,0xbaaf5002)
HX_LOCAL_STACK_FRAME(_hx_pos_bdb32f465ea5ef0b_80_isOver,"auxiliar.FlxButtonAnimation","isOver",0x50044671,"auxiliar.FlxButtonAnimation.isOver","auxiliar/FlxButtonAnimation.hx",80,0xbaaf5002)
HX_LOCAL_STACK_FRAME(_hx_pos_bdb32f465ea5ef0b_85_isButtonClicked,"auxiliar.FlxButtonAnimation","isButtonClicked",0xe0107e18,"auxiliar.FlxButtonAnimation.isButtonClicked","auxiliar/FlxButtonAnimation.hx",85,0xbaaf5002)
HX_LOCAL_STACK_FRAME(_hx_pos_bdb32f465ea5ef0b_90_destroy,"auxiliar.FlxButtonAnimation","destroy",0x03f34d87,"auxiliar.FlxButtonAnimation.destroy","auxiliar/FlxButtonAnimation.hx",90,0xbaaf5002)
namespace auxiliar{

void FlxButtonAnimation_obj::__construct(::String aImagePath,int aAnimationWidth,int aAnimationHeight, ::Dynamic aOnPressed, ::Dynamic aWithMouse){
            	HX_GC_STACKFRAME(&_hx_pos_bdb32f465ea5ef0b_14_new)
HXLINE(  18)		this->vIsWithMouse = false;
HXLINE(  17)		this->vEnabled = true;
HXLINE(  25)		super::__construct(null(),null(),null());
HXLINE(  26)		this->loadGraphic(::openfl::utils::Assets_obj::getBitmapData(aImagePath,null()),true,aAnimationWidth,aAnimationHeight,null(),null());
HXLINE(  27)		this->vMousePosition =  ::flixel::math::FlxPoint_obj::__alloc( HX_CTX ,null(),null());
HXLINE(  28)		this->vOnPressed = aOnPressed;
HXLINE(  29)		this->vIsWithMouse = aWithMouse;
            	}

Dynamic FlxButtonAnimation_obj::__CreateEmpty() { return new FlxButtonAnimation_obj; }

void *FlxButtonAnimation_obj::_hx_vtable = 0;

Dynamic FlxButtonAnimation_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< FlxButtonAnimation_obj > _hx_result = new FlxButtonAnimation_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4]);
	return _hx_result;
}

bool FlxButtonAnimation_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x25a685e0) {
		if (inClassId<=(int)0x0b6ffd77) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x0b6ffd77;
		} else {
			return inClassId==(int)0x25a685e0;
		}
	} else {
		return inClassId==(int)0x2e105115 || inClassId==(int)0x58911ad3;
	}
}

void FlxButtonAnimation_obj::setUp(::Array< int > aFrames,hx::Null< bool >  __o_aLoop,hx::Null< int >  __o_aFrameRate){
bool aLoop = __o_aLoop.Default(true);
int aFrameRate = __o_aFrameRate.Default(30);
            	HX_STACKFRAME(&_hx_pos_bdb32f465ea5ef0b_34_setUp)
HXDLIN(  34)		this->animation->add(HX_("up",5b,66,00,00),aFrames,aFrameRate,aLoop,null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC3(FlxButtonAnimation_obj,setUp,(void))

void FlxButtonAnimation_obj::setDown(::Array< int > aFrames,hx::Null< bool >  __o_aLoop,hx::Null< int >  __o_aFrameRate){
bool aLoop = __o_aLoop.Default(true);
int aFrameRate = __o_aFrameRate.Default(30);
            	HX_STACKFRAME(&_hx_pos_bdb32f465ea5ef0b_39_setDown)
HXDLIN(  39)		this->animation->add(HX_("down",62,f8,6d,42),aFrames,aFrameRate,aLoop,null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC3(FlxButtonAnimation_obj,setDown,(void))

void FlxButtonAnimation_obj::setOver(::Array< int > aFrames,hx::Null< bool >  __o_aLoop,hx::Null< int >  __o_aFrameRate){
bool aLoop = __o_aLoop.Default(true);
int aFrameRate = __o_aFrameRate.Default(30);
            	HX_STACKFRAME(&_hx_pos_bdb32f465ea5ef0b_44_setOver)
HXDLIN(  44)		this->animation->add(HX_("over",54,91,b8,49),aFrames,aFrameRate,aLoop,null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC3(FlxButtonAnimation_obj,setOver,(void))

void FlxButtonAnimation_obj::update(Float aDt){
            	HX_STACKFRAME(&_hx_pos_bdb32f465ea5ef0b_48_update)
HXLINE(  49)		if (this->vIsWithMouse) {
HXLINE(  50)			this->vMousePosition->set(::flixel::FlxG_obj::mouse->x,::flixel::FlxG_obj::mouse->y);
HXLINE(  51)			 ::flixel::math::FlxPoint aMousePosition = this->vMousePosition;
HXDLIN(  51)			if (this->overlapsPoint(this->vMousePosition,null(),null())) {
HXLINE(  53)				 ::flixel::input::mouse::FlxMouseButton _this = ::flixel::FlxG_obj::mouse->_leftButton;
HXDLIN(  53)				bool _hx_tmp;
HXDLIN(  53)				if ((_this->current != (int)1)) {
HXLINE(  53)					_hx_tmp = (_this->current == (int)2);
            				}
            				else {
HXLINE(  53)					_hx_tmp = true;
            				}
HXDLIN(  53)				if (_hx_tmp) {
HXLINE(  55)					this->animation->play(HX_("down",62,f8,6d,42),null(),null(),null());
            				}
            				else {
HXLINE(  57)					this->animation->play(HX_("over",54,91,b8,49),null(),null(),null());
            				}
HXLINE(  59)				if ((::flixel::FlxG_obj::mouse->_leftButton->current == (int)-1)) {
HXLINE(  61)					if (hx::IsNotNull( this->vOnPressed )) {
HXLINE(  63)						this->vOnPressed(hx::ObjectPtr<OBJ_>(this));
            					}
            				}
            			}
            			else {
HXLINE(  67)				this->animation->play(HX_("up",5b,66,00,00),null(),null(),null());
            			}
            		}
HXLINE(  70)		this->super::update(aDt);
            	}


bool FlxButtonAnimation_obj::isTouchingButton(){
            	HX_STACKFRAME(&_hx_pos_bdb32f465ea5ef0b_75_isTouchingButton)
HXDLIN(  75)		 ::flixel::math::FlxPoint aMousePosition = this->vMousePosition;
HXDLIN(  75)		return this->overlapsPoint(this->vMousePosition,null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxButtonAnimation_obj,isTouchingButton,return )

bool FlxButtonAnimation_obj::isOver( ::flixel::math::FlxPoint aMousePosition){
            	HX_STACKFRAME(&_hx_pos_bdb32f465ea5ef0b_80_isOver)
HXDLIN(  80)		return this->overlapsPoint(this->vMousePosition,null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxButtonAnimation_obj,isOver,return )

bool FlxButtonAnimation_obj::isButtonClicked(){
            	HX_STACKFRAME(&_hx_pos_bdb32f465ea5ef0b_85_isButtonClicked)
HXDLIN(  85)		return (::flixel::FlxG_obj::mouse->_leftButton->current == (int)-1);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxButtonAnimation_obj,isButtonClicked,return )

void FlxButtonAnimation_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_bdb32f465ea5ef0b_90_destroy)
HXDLIN(  90)		this->super::destroy();
            	}



hx::ObjectPtr< FlxButtonAnimation_obj > FlxButtonAnimation_obj::__new(::String aImagePath,int aAnimationWidth,int aAnimationHeight, ::Dynamic aOnPressed, ::Dynamic aWithMouse) {
	hx::ObjectPtr< FlxButtonAnimation_obj > __this = new FlxButtonAnimation_obj();
	__this->__construct(aImagePath,aAnimationWidth,aAnimationHeight,aOnPressed,aWithMouse);
	return __this;
}

hx::ObjectPtr< FlxButtonAnimation_obj > FlxButtonAnimation_obj::__alloc(hx::Ctx *_hx_ctx,::String aImagePath,int aAnimationWidth,int aAnimationHeight, ::Dynamic aOnPressed, ::Dynamic aWithMouse) {
	FlxButtonAnimation_obj *__this = (FlxButtonAnimation_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(FlxButtonAnimation_obj), true, "auxiliar.FlxButtonAnimation"));
	*(void **)__this = FlxButtonAnimation_obj::_hx_vtable;
	__this->__construct(aImagePath,aAnimationWidth,aAnimationHeight,aOnPressed,aWithMouse);
	return __this;
}

FlxButtonAnimation_obj::FlxButtonAnimation_obj()
{
}

void FlxButtonAnimation_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(FlxButtonAnimation);
	HX_MARK_MEMBER_NAME(vOnPressed,"vOnPressed");
	HX_MARK_MEMBER_NAME(vEnabled,"vEnabled");
	HX_MARK_MEMBER_NAME(vIsWithMouse,"vIsWithMouse");
	HX_MARK_MEMBER_NAME(vMousePosition,"vMousePosition");
	 ::flixel::FlxSprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void FlxButtonAnimation_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(vOnPressed,"vOnPressed");
	HX_VISIT_MEMBER_NAME(vEnabled,"vEnabled");
	HX_VISIT_MEMBER_NAME(vIsWithMouse,"vIsWithMouse");
	HX_VISIT_MEMBER_NAME(vMousePosition,"vMousePosition");
	 ::flixel::FlxSprite_obj::__Visit(HX_VISIT_ARG);
}

hx::Val FlxButtonAnimation_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"setUp") ) { return hx::Val( setUp_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn() ); }
		if (HX_FIELD_EQ(inName,"isOver") ) { return hx::Val( isOver_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"setDown") ) { return hx::Val( setDown_dyn() ); }
		if (HX_FIELD_EQ(inName,"setOver") ) { return hx::Val( setOver_dyn() ); }
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"vEnabled") ) { return hx::Val( vEnabled ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"vOnPressed") ) { return hx::Val( vOnPressed ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"vIsWithMouse") ) { return hx::Val( vIsWithMouse ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"vMousePosition") ) { return hx::Val( vMousePosition ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"isButtonClicked") ) { return hx::Val( isButtonClicked_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"isTouchingButton") ) { return hx::Val( isTouchingButton_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val FlxButtonAnimation_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"vEnabled") ) { vEnabled=inValue.Cast< bool >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"vOnPressed") ) { vOnPressed=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"vIsWithMouse") ) { vIsWithMouse=inValue.Cast< bool >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"vMousePosition") ) { vMousePosition=inValue.Cast<  ::flixel::math::FlxPoint >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FlxButtonAnimation_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("vEnabled","\xab","\xc6","\xc2","\xa8"));
	outFields->push(HX_HCSTRING("vIsWithMouse","\x1f","\x50","\x42","\xa1"));
	outFields->push(HX_HCSTRING("vMousePosition","\x98","\x5d","\xd0","\x5d"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo FlxButtonAnimation_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(FlxButtonAnimation_obj,vOnPressed),HX_HCSTRING("vOnPressed","\xed","\xab","\xb7","\x55")},
	{hx::fsBool,(int)offsetof(FlxButtonAnimation_obj,vEnabled),HX_HCSTRING("vEnabled","\xab","\xc6","\xc2","\xa8")},
	{hx::fsBool,(int)offsetof(FlxButtonAnimation_obj,vIsWithMouse),HX_HCSTRING("vIsWithMouse","\x1f","\x50","\x42","\xa1")},
	{hx::fsObject /*::flixel::math::FlxPoint*/ ,(int)offsetof(FlxButtonAnimation_obj,vMousePosition),HX_HCSTRING("vMousePosition","\x98","\x5d","\xd0","\x5d")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *FlxButtonAnimation_obj_sStaticStorageInfo = 0;
#endif

static ::String FlxButtonAnimation_obj_sMemberFields[] = {
	HX_HCSTRING("vOnPressed","\xed","\xab","\xb7","\x55"),
	HX_HCSTRING("vEnabled","\xab","\xc6","\xc2","\xa8"),
	HX_HCSTRING("vIsWithMouse","\x1f","\x50","\x42","\xa1"),
	HX_HCSTRING("vMousePosition","\x98","\x5d","\xd0","\x5d"),
	HX_HCSTRING("setUp","\x9d","\x92","\x2f","\x7a"),
	HX_HCSTRING("setDown","\x24","\x39","\xf2","\x07"),
	HX_HCSTRING("setOver","\x16","\xd2","\x3c","\x0f"),
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	HX_HCSTRING("isTouchingButton","\x5f","\x66","\x29","\xa2"),
	HX_HCSTRING("isOver","\x5e","\x56","\x1f","\x67"),
	HX_HCSTRING("isButtonClicked","\x8b","\x88","\x8c","\xef"),
	HX_HCSTRING("destroy","\xfa","\x2c","\x86","\x24"),
	::String(null()) };

static void FlxButtonAnimation_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FlxButtonAnimation_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FlxButtonAnimation_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FlxButtonAnimation_obj::__mClass,"__mClass");
};

#endif

hx::Class FlxButtonAnimation_obj::__mClass;

void FlxButtonAnimation_obj::__register()
{
	hx::Object *dummy = new FlxButtonAnimation_obj;
	FlxButtonAnimation_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("auxiliar.FlxButtonAnimation","\xfb","\xab","\x87","\x25");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FlxButtonAnimation_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(FlxButtonAnimation_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< FlxButtonAnimation_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FlxButtonAnimation_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxButtonAnimation_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxButtonAnimation_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace auxiliar
