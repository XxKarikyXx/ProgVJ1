// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxCamera
#include <flixel/FlxCamera.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_input_FlxInput
#include <flixel/input/FlxInput.h>
#endif
#ifndef INCLUDED_flixel_input_FlxPointer
#include <flixel/input/FlxPointer.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInput
#include <flixel/input/IFlxInput.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInputManager
#include <flixel/input/IFlxInputManager.h>
#endif
#ifndef INCLUDED_flixel_input_mouse_FlxMouse
#include <flixel/input/mouse/FlxMouse.h>
#endif
#ifndef INCLUDED_flixel_input_mouse_FlxMouseButton
#include <flixel/input/mouse/FlxMouseButton.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
#ifndef INCLUDED_flixel_text_FlxTextBorderStyle
#include <flixel/text/FlxTextBorderStyle.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_utils_Assets
#include <openfl/utils/Assets.h>
#endif
#ifndef INCLUDED_skill_FlxButtonAnimationSkill
#include <skill/FlxButtonAnimationSkill.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_9db3003e23718e31_15_new,"skill.FlxButtonAnimationSkill","new",0xd99ea006,"skill.FlxButtonAnimationSkill.new","skill/FlxButtonAnimationSkill.hx",15,0x15bc7f6b)
HX_LOCAL_STACK_FRAME(_hx_pos_9db3003e23718e31_52_updateLabel,"skill.FlxButtonAnimationSkill","updateLabel",0x85035cd1,"skill.FlxButtonAnimationSkill.updateLabel","skill/FlxButtonAnimationSkill.hx",52,0x15bc7f6b)
HX_LOCAL_STACK_FRAME(_hx_pos_9db3003e23718e31_62_setCooldown,"skill.FlxButtonAnimationSkill","setCooldown",0x59befb13,"skill.FlxButtonAnimationSkill.setCooldown","skill/FlxButtonAnimationSkill.hx",62,0x15bc7f6b)
HX_LOCAL_STACK_FRAME(_hx_pos_9db3003e23718e31_67_setDisabled,"skill.FlxButtonAnimationSkill","setDisabled",0xdc20f0e4,"skill.FlxButtonAnimationSkill.setDisabled","skill/FlxButtonAnimationSkill.hx",67,0x15bc7f6b)
HX_LOCAL_STACK_FRAME(_hx_pos_9db3003e23718e31_72_setUp,"skill.FlxButtonAnimationSkill","setUp",0x578a17c3,"skill.FlxButtonAnimationSkill.setUp","skill/FlxButtonAnimationSkill.hx",72,0x15bc7f6b)
HX_LOCAL_STACK_FRAME(_hx_pos_9db3003e23718e31_77_setDown,"skill.FlxButtonAnimationSkill","setDown",0xd4d4d3ca,"skill.FlxButtonAnimationSkill.setDown","skill/FlxButtonAnimationSkill.hx",77,0x15bc7f6b)
HX_LOCAL_STACK_FRAME(_hx_pos_9db3003e23718e31_82_setOver,"skill.FlxButtonAnimationSkill","setOver",0xdc1f6cbc,"skill.FlxButtonAnimationSkill.setOver","skill/FlxButtonAnimationSkill.hx",82,0x15bc7f6b)
HX_LOCAL_STACK_FRAME(_hx_pos_9db3003e23718e31_86_setActivation,"skill.FlxButtonAnimationSkill","setActivation",0xe1e971fe,"skill.FlxButtonAnimationSkill.setActivation","skill/FlxButtonAnimationSkill.hx",86,0x15bc7f6b)
HX_LOCAL_STACK_FRAME(_hx_pos_9db3003e23718e31_95_update,"skill.FlxButtonAnimationSkill","update",0x58df8223,"skill.FlxButtonAnimationSkill.update","skill/FlxButtonAnimationSkill.hx",95,0x15bc7f6b)
HX_LOCAL_STACK_FRAME(_hx_pos_9db3003e23718e31_173_isTouchingButton,"skill.FlxButtonAnimationSkill","isTouchingButton",0xa56d46f9,"skill.FlxButtonAnimationSkill.isTouchingButton","skill/FlxButtonAnimationSkill.hx",173,0x15bc7f6b)
HX_LOCAL_STACK_FRAME(_hx_pos_9db3003e23718e31_178_isOver,"skill.FlxButtonAnimationSkill","isOver",0x38f95278,"skill.FlxButtonAnimationSkill.isOver","skill/FlxButtonAnimationSkill.hx",178,0x15bc7f6b)
HX_LOCAL_STACK_FRAME(_hx_pos_9db3003e23718e31_183_isButtonClicked,"skill.FlxButtonAnimationSkill","isButtonClicked",0x70233931,"skill.FlxButtonAnimationSkill.isButtonClicked","skill/FlxButtonAnimationSkill.hx",183,0x15bc7f6b)
HX_LOCAL_STACK_FRAME(_hx_pos_9db3003e23718e31_188_destroy,"skill.FlxButtonAnimationSkill","destroy",0xf168c7a0,"skill.FlxButtonAnimationSkill.destroy","skill/FlxButtonAnimationSkill.hx",188,0x15bc7f6b)
namespace skill{

void FlxButtonAnimationSkill_obj::__construct(::String aImagePath,int aAnimationWidth,int aAnimationHeight, ::Dynamic aOnPressed, ::Dynamic aOnPressedActive, ::Dynamic aOnOver, ::Dynamic aCoolDown, ::flixel::text::FlxText aLabel){
            	HX_GC_STACKFRAME(&_hx_pos_9db3003e23718e31_15_new)
HXLINE(  25)		this->vEnabled = true;
HXLINE(  19)		this->vActiveButton = false;
HXLINE(  18)		this->vTimerCoolDown = ((Float)0);
HXLINE(  17)		this->vCoolDown = (int)0;
HXLINE(  31)		super::__construct(null(),null(),null());
HXLINE(  32)		this->loadGraphic(::openfl::utils::Assets_obj::getBitmapData(aImagePath,null()),true,aAnimationWidth,aAnimationHeight,null(),null());
HXLINE(  33)		this->vMousePosition =  ::flixel::math::FlxPoint_obj::__alloc( HX_CTX ,null(),null());
HXLINE(  34)		this->vOnPressed = aOnPressed;
HXLINE(  35)		this->vOnPressedActive = aOnPressedActive;
HXLINE(  36)		this->vOnOver = aOnOver;
HXLINE(  37)		this->vCoolDown = aCoolDown;
HXLINE(  38)		this->vTimerCoolDown = (int)0;
HXLINE(  39)		this->vLabel = aLabel;
HXLINE(  40)		if (hx::IsNotNull( this->vLabel )) {
HXLINE(  42)			 ::flixel::text::FlxText _hx_tmp = this->vLabel;
HXDLIN(  42)			_hx_tmp->set_fieldWidth(this->get_width());
HXLINE(  43)			this->vLabel->setFormat(null(),(int)20,(int)-1,null(),null(),null(),null());
HXLINE(  44)			this->vLabel->set_alpha(((Float)0.5));
HXLINE(  45)			this->vLabel->set_visible(false);
            		}
HXLINE(  47)		this->updateLabel(HX_("",00,00,00,00));
            	}

Dynamic FlxButtonAnimationSkill_obj::__CreateEmpty() { return new FlxButtonAnimationSkill_obj; }

void *FlxButtonAnimationSkill_obj::_hx_vtable = 0;

Dynamic FlxButtonAnimationSkill_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< FlxButtonAnimationSkill_obj > _hx_result = new FlxButtonAnimationSkill_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4],inArgs[5],inArgs[6],inArgs[7]);
	return _hx_result;
}

bool FlxButtonAnimationSkill_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0b6ffd77) {
		if (inClassId<=(int)0x03b82148) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x03b82148;
		} else {
			return inClassId==(int)0x0b6ffd77;
		}
	} else {
		return inClassId==(int)0x25a685e0 || inClassId==(int)0x2e105115;
	}
}

void FlxButtonAnimationSkill_obj::updateLabel(::String atext){
            	HX_STACKFRAME(&_hx_pos_9db3003e23718e31_52_updateLabel)
HXDLIN(  52)		if (hx::IsNotNull( this->vLabel )) {
HXLINE(  54)			this->vLabel->setPosition(this->x,this->y);
HXLINE(  55)			this->vLabel->set_text(atext);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxButtonAnimationSkill_obj,updateLabel,(void))

void FlxButtonAnimationSkill_obj::setCooldown(::Array< int > aFrames,hx::Null< bool >  __o_aLoop,hx::Null< int >  __o_aFrameRate){
bool aLoop = __o_aLoop.Default(true);
int aFrameRate = __o_aFrameRate.Default(30);
            	HX_STACKFRAME(&_hx_pos_9db3003e23718e31_62_setCooldown)
HXDLIN(  62)		this->animation->add(HX_("cooldown",ab,4b,a2,f9),aFrames,aFrameRate,aLoop,null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC3(FlxButtonAnimationSkill_obj,setCooldown,(void))

void FlxButtonAnimationSkill_obj::setDisabled(::Array< int > aFrames,hx::Null< bool >  __o_aLoop,hx::Null< int >  __o_aFrameRate){
bool aLoop = __o_aLoop.Default(true);
int aFrameRate = __o_aFrameRate.Default(30);
            	HX_STACKFRAME(&_hx_pos_9db3003e23718e31_67_setDisabled)
HXDLIN(  67)		this->animation->add(HX_("disabled",7c,41,04,7c),aFrames,aFrameRate,aLoop,null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC3(FlxButtonAnimationSkill_obj,setDisabled,(void))

void FlxButtonAnimationSkill_obj::setUp(::Array< int > aFrames,hx::Null< bool >  __o_aLoop,hx::Null< int >  __o_aFrameRate){
bool aLoop = __o_aLoop.Default(true);
int aFrameRate = __o_aFrameRate.Default(30);
            	HX_STACKFRAME(&_hx_pos_9db3003e23718e31_72_setUp)
HXDLIN(  72)		this->animation->add(HX_("up",5b,66,00,00),aFrames,aFrameRate,aLoop,null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC3(FlxButtonAnimationSkill_obj,setUp,(void))

void FlxButtonAnimationSkill_obj::setDown(::Array< int > aFrames,hx::Null< bool >  __o_aLoop,hx::Null< int >  __o_aFrameRate){
bool aLoop = __o_aLoop.Default(true);
int aFrameRate = __o_aFrameRate.Default(30);
            	HX_STACKFRAME(&_hx_pos_9db3003e23718e31_77_setDown)
HXDLIN(  77)		this->animation->add(HX_("down",62,f8,6d,42),aFrames,aFrameRate,aLoop,null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC3(FlxButtonAnimationSkill_obj,setDown,(void))

void FlxButtonAnimationSkill_obj::setOver(::Array< int > aFrames,hx::Null< bool >  __o_aLoop,hx::Null< int >  __o_aFrameRate){
bool aLoop = __o_aLoop.Default(true);
int aFrameRate = __o_aFrameRate.Default(30);
            	HX_STACKFRAME(&_hx_pos_9db3003e23718e31_82_setOver)
HXDLIN(  82)		this->animation->add(HX_("over",54,91,b8,49),aFrames,aFrameRate,aLoop,null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC3(FlxButtonAnimationSkill_obj,setOver,(void))

void FlxButtonAnimationSkill_obj::setActivation(){
            	HX_STACKFRAME(&_hx_pos_9db3003e23718e31_86_setActivation)
HXLINE(  87)		this->vTimerCoolDown = this->vCoolDown;
HXLINE(  88)		this->vActiveButton = true;
HXLINE(  89)		this->animation->play(HX_("cooldown",ab,4b,a2,f9),null(),null(),null());
HXLINE(  90)		this->vLabel->set_text(HX_("",00,00,00,00));
HXLINE(  91)		this->vLabel->set_visible(true);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxButtonAnimationSkill_obj,setActivation,(void))

void FlxButtonAnimationSkill_obj::update(Float aDt){
            	HX_STACKFRAME(&_hx_pos_9db3003e23718e31_95_update)
HXLINE(  96)		this->vMousePosition->set(::flixel::FlxG_obj::mouse->x,::flixel::FlxG_obj::mouse->y);
HXLINE(  97)		if ((this->vTimerCoolDown > (int)0)) {
HXLINE(  99)			this->updateLabel((::Std_obj::_hx_int((this->vTimerCoolDown + (int)1)) + HX_("",00,00,00,00)));
HXLINE( 100)			this->vActiveButton = false;
HXLINE( 101)			this->vTimerCoolDown = (this->vTimerCoolDown - aDt);
HXLINE( 102)			 ::flixel::math::FlxPoint aMousePosition = this->vMousePosition;
HXDLIN( 102)			if (this->overlapsPoint(this->vMousePosition,null(),null())) {
HXLINE( 104)				this->vOnOver(hx::ObjectPtr<OBJ_>(this));
            			}
            		}
            		else {
HXLINE( 113)			this->vLabel->set_visible(false);
HXLINE( 114)			 ::flixel::math::FlxPoint aMousePosition1 = this->vMousePosition;
HXDLIN( 114)			if (this->overlapsPoint(this->vMousePosition,null(),null())) {
HXLINE( 116)				this->vOnOver(hx::ObjectPtr<OBJ_>(this));
HXLINE( 117)				bool _hx_tmp;
HXDLIN( 117)				 ::flixel::input::mouse::FlxMouseButton _this = ::flixel::FlxG_obj::mouse->_leftButton;
HXDLIN( 117)				bool _hx_tmp1;
HXDLIN( 117)				if ((_this->current != (int)1)) {
HXLINE( 117)					_hx_tmp1 = (_this->current == (int)2);
            				}
            				else {
HXLINE( 117)					_hx_tmp1 = true;
            				}
HXDLIN( 117)				if (_hx_tmp1) {
HXLINE( 117)					_hx_tmp = !(this->vActiveButton);
            				}
            				else {
HXLINE( 117)					_hx_tmp = false;
            				}
HXDLIN( 117)				if (_hx_tmp) {
HXLINE( 119)					this->animation->play(HX_("down",62,f8,6d,42),null(),null(),null());
            				}
            				else {
HXLINE( 123)					if (!(this->vActiveButton)) {
HXLINE( 125)						this->animation->play(HX_("over",54,91,b8,49),null(),null(),null());
            					}
            				}
HXLINE( 128)				if ((::flixel::FlxG_obj::mouse->_leftButton->current == (int)-1)) {
HXLINE( 131)					if (!(this->vActiveButton)) {
HXLINE( 133)						::haxe::Log_obj::trace(HX_("Im not active yet",57,48,cc,65),hx::SourceInfo(HX_("FlxButtonAnimationSkill.hx",6d,d0,db,9e),133,HX_("skill.FlxButtonAnimationSkill",14,e5,08,d0),HX_("update",09,86,05,87)));
HXLINE( 134)						this->vActiveButton = true;
HXLINE( 135)						if (hx::IsNotNull( this->vOnPressed )) {
HXLINE( 137)							this->vOnPressed(hx::ObjectPtr<OBJ_>(this));
            						}
HXLINE( 139)						::haxe::Log_obj::trace(HX_("Actived",be,73,84,34),hx::SourceInfo(HX_("FlxButtonAnimationSkill.hx",6d,d0,db,9e),139,HX_("skill.FlxButtonAnimationSkill",14,e5,08,d0),HX_("update",09,86,05,87)));
HXLINE( 140)						this->animation->play(HX_("disabled",7c,41,04,7c),null(),null(),null());
            					}
            					else {
HXLINE( 144)						::haxe::Log_obj::trace(HX_("Im actived",c2,73,87,33),hx::SourceInfo(HX_("FlxButtonAnimationSkill.hx",6d,d0,db,9e),144,HX_("skill.FlxButtonAnimationSkill",14,e5,08,d0),HX_("update",09,86,05,87)));
HXLINE( 145)						this->vActiveButton = false;
HXLINE( 146)						if (hx::IsNotNull( this->vOnPressedActive )) {
HXLINE( 148)							this->vOnPressedActive(hx::ObjectPtr<OBJ_>(this));
            						}
HXLINE( 150)						::haxe::Log_obj::trace(HX_("Not actived",b1,cb,f3,c6),hx::SourceInfo(HX_("FlxButtonAnimationSkill.hx",6d,d0,db,9e),150,HX_("skill.FlxButtonAnimationSkill",14,e5,08,d0),HX_("update",09,86,05,87)));
HXLINE( 151)						this->animation->play(HX_("up",5b,66,00,00),null(),null(),null());
            					}
            				}
            			}
            			else {
HXLINE( 160)				if (!(this->vActiveButton)) {
HXLINE( 162)					this->animation->play(HX_("up",5b,66,00,00),null(),null(),null());
            				}
            			}
            		}
HXLINE( 167)		this->super::update(aDt);
            	}


bool FlxButtonAnimationSkill_obj::isTouchingButton(){
            	HX_STACKFRAME(&_hx_pos_9db3003e23718e31_173_isTouchingButton)
HXDLIN( 173)		 ::flixel::math::FlxPoint aMousePosition = this->vMousePosition;
HXDLIN( 173)		return this->overlapsPoint(this->vMousePosition,null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxButtonAnimationSkill_obj,isTouchingButton,return )

bool FlxButtonAnimationSkill_obj::isOver( ::flixel::math::FlxPoint aMousePosition){
            	HX_STACKFRAME(&_hx_pos_9db3003e23718e31_178_isOver)
HXDLIN( 178)		return this->overlapsPoint(this->vMousePosition,null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxButtonAnimationSkill_obj,isOver,return )

bool FlxButtonAnimationSkill_obj::isButtonClicked(){
            	HX_STACKFRAME(&_hx_pos_9db3003e23718e31_183_isButtonClicked)
HXDLIN( 183)		return (::flixel::FlxG_obj::mouse->_leftButton->current == (int)-1);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxButtonAnimationSkill_obj,isButtonClicked,return )

void FlxButtonAnimationSkill_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_9db3003e23718e31_188_destroy)
HXDLIN( 188)		this->super::destroy();
            	}



hx::ObjectPtr< FlxButtonAnimationSkill_obj > FlxButtonAnimationSkill_obj::__new(::String aImagePath,int aAnimationWidth,int aAnimationHeight, ::Dynamic aOnPressed, ::Dynamic aOnPressedActive, ::Dynamic aOnOver, ::Dynamic aCoolDown, ::flixel::text::FlxText aLabel) {
	hx::ObjectPtr< FlxButtonAnimationSkill_obj > __this = new FlxButtonAnimationSkill_obj();
	__this->__construct(aImagePath,aAnimationWidth,aAnimationHeight,aOnPressed,aOnPressedActive,aOnOver,aCoolDown,aLabel);
	return __this;
}

hx::ObjectPtr< FlxButtonAnimationSkill_obj > FlxButtonAnimationSkill_obj::__alloc(hx::Ctx *_hx_ctx,::String aImagePath,int aAnimationWidth,int aAnimationHeight, ::Dynamic aOnPressed, ::Dynamic aOnPressedActive, ::Dynamic aOnOver, ::Dynamic aCoolDown, ::flixel::text::FlxText aLabel) {
	FlxButtonAnimationSkill_obj *__this = (FlxButtonAnimationSkill_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(FlxButtonAnimationSkill_obj), true, "skill.FlxButtonAnimationSkill"));
	*(void **)__this = FlxButtonAnimationSkill_obj::_hx_vtable;
	__this->__construct(aImagePath,aAnimationWidth,aAnimationHeight,aOnPressed,aOnPressedActive,aOnOver,aCoolDown,aLabel);
	return __this;
}

FlxButtonAnimationSkill_obj::FlxButtonAnimationSkill_obj()
{
}

void FlxButtonAnimationSkill_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(FlxButtonAnimationSkill);
	HX_MARK_MEMBER_NAME(vCoolDown,"vCoolDown");
	HX_MARK_MEMBER_NAME(vTimerCoolDown,"vTimerCoolDown");
	HX_MARK_MEMBER_NAME(vActiveButton,"vActiveButton");
	HX_MARK_MEMBER_NAME(vOnPressedActive,"vOnPressedActive");
	HX_MARK_MEMBER_NAME(vOnOver,"vOnOver");
	HX_MARK_MEMBER_NAME(vLabel,"vLabel");
	HX_MARK_MEMBER_NAME(vOnPressed,"vOnPressed");
	HX_MARK_MEMBER_NAME(vEnabled,"vEnabled");
	HX_MARK_MEMBER_NAME(vMousePosition,"vMousePosition");
	 ::flixel::FlxSprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void FlxButtonAnimationSkill_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(vCoolDown,"vCoolDown");
	HX_VISIT_MEMBER_NAME(vTimerCoolDown,"vTimerCoolDown");
	HX_VISIT_MEMBER_NAME(vActiveButton,"vActiveButton");
	HX_VISIT_MEMBER_NAME(vOnPressedActive,"vOnPressedActive");
	HX_VISIT_MEMBER_NAME(vOnOver,"vOnOver");
	HX_VISIT_MEMBER_NAME(vLabel,"vLabel");
	HX_VISIT_MEMBER_NAME(vOnPressed,"vOnPressed");
	HX_VISIT_MEMBER_NAME(vEnabled,"vEnabled");
	HX_VISIT_MEMBER_NAME(vMousePosition,"vMousePosition");
	 ::flixel::FlxSprite_obj::__Visit(HX_VISIT_ARG);
}

hx::Val FlxButtonAnimationSkill_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"setUp") ) { return hx::Val( setUp_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"vLabel") ) { return hx::Val( vLabel ); }
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn() ); }
		if (HX_FIELD_EQ(inName,"isOver") ) { return hx::Val( isOver_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"vOnOver") ) { return hx::Val( vOnOver ); }
		if (HX_FIELD_EQ(inName,"setDown") ) { return hx::Val( setDown_dyn() ); }
		if (HX_FIELD_EQ(inName,"setOver") ) { return hx::Val( setOver_dyn() ); }
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"vEnabled") ) { return hx::Val( vEnabled ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"vCoolDown") ) { return hx::Val( vCoolDown ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"vOnPressed") ) { return hx::Val( vOnPressed ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"updateLabel") ) { return hx::Val( updateLabel_dyn() ); }
		if (HX_FIELD_EQ(inName,"setCooldown") ) { return hx::Val( setCooldown_dyn() ); }
		if (HX_FIELD_EQ(inName,"setDisabled") ) { return hx::Val( setDisabled_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"vActiveButton") ) { return hx::Val( vActiveButton ); }
		if (HX_FIELD_EQ(inName,"setActivation") ) { return hx::Val( setActivation_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"vTimerCoolDown") ) { return hx::Val( vTimerCoolDown ); }
		if (HX_FIELD_EQ(inName,"vMousePosition") ) { return hx::Val( vMousePosition ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"isButtonClicked") ) { return hx::Val( isButtonClicked_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"vOnPressedActive") ) { return hx::Val( vOnPressedActive ); }
		if (HX_FIELD_EQ(inName,"isTouchingButton") ) { return hx::Val( isTouchingButton_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val FlxButtonAnimationSkill_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"vLabel") ) { vLabel=inValue.Cast<  ::flixel::text::FlxText >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"vOnOver") ) { vOnOver=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"vEnabled") ) { vEnabled=inValue.Cast< bool >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"vCoolDown") ) { vCoolDown=inValue.Cast< int >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"vOnPressed") ) { vOnPressed=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"vActiveButton") ) { vActiveButton=inValue.Cast< bool >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"vTimerCoolDown") ) { vTimerCoolDown=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"vMousePosition") ) { vMousePosition=inValue.Cast<  ::flixel::math::FlxPoint >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"vOnPressedActive") ) { vOnPressedActive=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FlxButtonAnimationSkill_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("vCoolDown","\x61","\x9a","\x73","\xf9"));
	outFields->push(HX_HCSTRING("vTimerCoolDown","\x5a","\x7e","\x54","\x00"));
	outFields->push(HX_HCSTRING("vActiveButton","\xee","\xd5","\xc7","\x28"));
	outFields->push(HX_HCSTRING("vLabel","\x9e","\x11","\xf9","\x30"));
	outFields->push(HX_HCSTRING("vEnabled","\xab","\xc6","\xc2","\xa8"));
	outFields->push(HX_HCSTRING("vMousePosition","\x98","\x5d","\xd0","\x5d"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo FlxButtonAnimationSkill_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(FlxButtonAnimationSkill_obj,vCoolDown),HX_HCSTRING("vCoolDown","\x61","\x9a","\x73","\xf9")},
	{hx::fsFloat,(int)offsetof(FlxButtonAnimationSkill_obj,vTimerCoolDown),HX_HCSTRING("vTimerCoolDown","\x5a","\x7e","\x54","\x00")},
	{hx::fsBool,(int)offsetof(FlxButtonAnimationSkill_obj,vActiveButton),HX_HCSTRING("vActiveButton","\xee","\xd5","\xc7","\x28")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(FlxButtonAnimationSkill_obj,vOnPressedActive),HX_HCSTRING("vOnPressedActive","\x93","\x91","\x83","\x99")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(FlxButtonAnimationSkill_obj,vOnOver),HX_HCSTRING("vOnOver","\x29","\xcb","\xbb","\x4b")},
	{hx::fsObject /*::flixel::text::FlxText*/ ,(int)offsetof(FlxButtonAnimationSkill_obj,vLabel),HX_HCSTRING("vLabel","\x9e","\x11","\xf9","\x30")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(FlxButtonAnimationSkill_obj,vOnPressed),HX_HCSTRING("vOnPressed","\xed","\xab","\xb7","\x55")},
	{hx::fsBool,(int)offsetof(FlxButtonAnimationSkill_obj,vEnabled),HX_HCSTRING("vEnabled","\xab","\xc6","\xc2","\xa8")},
	{hx::fsObject /*::flixel::math::FlxPoint*/ ,(int)offsetof(FlxButtonAnimationSkill_obj,vMousePosition),HX_HCSTRING("vMousePosition","\x98","\x5d","\xd0","\x5d")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *FlxButtonAnimationSkill_obj_sStaticStorageInfo = 0;
#endif

static ::String FlxButtonAnimationSkill_obj_sMemberFields[] = {
	HX_HCSTRING("vCoolDown","\x61","\x9a","\x73","\xf9"),
	HX_HCSTRING("vTimerCoolDown","\x5a","\x7e","\x54","\x00"),
	HX_HCSTRING("vActiveButton","\xee","\xd5","\xc7","\x28"),
	HX_HCSTRING("vOnPressedActive","\x93","\x91","\x83","\x99"),
	HX_HCSTRING("vOnOver","\x29","\xcb","\xbb","\x4b"),
	HX_HCSTRING("vLabel","\x9e","\x11","\xf9","\x30"),
	HX_HCSTRING("vOnPressed","\xed","\xab","\xb7","\x55"),
	HX_HCSTRING("vEnabled","\xab","\xc6","\xc2","\xa8"),
	HX_HCSTRING("vMousePosition","\x98","\x5d","\xd0","\x5d"),
	HX_HCSTRING("updateLabel","\x2b","\x77","\x47","\x55"),
	HX_HCSTRING("setCooldown","\x6d","\x15","\x03","\x2a"),
	HX_HCSTRING("setDisabled","\x3e","\x0b","\x65","\xac"),
	HX_HCSTRING("setUp","\x9d","\x92","\x2f","\x7a"),
	HX_HCSTRING("setDown","\x24","\x39","\xf2","\x07"),
	HX_HCSTRING("setOver","\x16","\xd2","\x3c","\x0f"),
	HX_HCSTRING("setActivation","\xd8","\x56","\x2c","\x5f"),
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	HX_HCSTRING("isTouchingButton","\x5f","\x66","\x29","\xa2"),
	HX_HCSTRING("isOver","\x5e","\x56","\x1f","\x67"),
	HX_HCSTRING("isButtonClicked","\x8b","\x88","\x8c","\xef"),
	HX_HCSTRING("destroy","\xfa","\x2c","\x86","\x24"),
	::String(null()) };

static void FlxButtonAnimationSkill_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FlxButtonAnimationSkill_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FlxButtonAnimationSkill_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FlxButtonAnimationSkill_obj::__mClass,"__mClass");
};

#endif

hx::Class FlxButtonAnimationSkill_obj::__mClass;

void FlxButtonAnimationSkill_obj::__register()
{
	hx::Object *dummy = new FlxButtonAnimationSkill_obj;
	FlxButtonAnimationSkill_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("skill.FlxButtonAnimationSkill","\x14","\xe5","\x08","\xd0");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FlxButtonAnimationSkill_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(FlxButtonAnimationSkill_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< FlxButtonAnimationSkill_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FlxButtonAnimationSkill_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxButtonAnimationSkill_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxButtonAnimationSkill_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace skill
