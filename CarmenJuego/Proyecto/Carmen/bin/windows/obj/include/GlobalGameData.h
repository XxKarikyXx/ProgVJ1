// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_GlobalGameData
#define INCLUDED_GlobalGameData

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(GlobalGameData)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,tile,FlxBaseTilemap)
HX_DECLARE_CLASS2(flixel,tile,FlxTilemap)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(gameObjects,God)
HX_DECLARE_CLASS1(gameObjects,Player1)



class HXCPP_CLASS_ATTRIBUTES GlobalGameData_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef GlobalGameData_obj OBJ_;
		GlobalGameData_obj();

	public:
		enum { _hx_ClassId = 0x094c42a7 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="GlobalGameData")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"GlobalGameData"); }

		hx::ObjectPtr< GlobalGameData_obj > __new() {
			hx::ObjectPtr< GlobalGameData_obj > __this = new GlobalGameData_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< GlobalGameData_obj > __alloc(hx::Ctx *_hx_ctx) {
			GlobalGameData_obj *__this = (GlobalGameData_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(GlobalGameData_obj), false, "GlobalGameData"));
			*(void **)__this = GlobalGameData_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~GlobalGameData_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("GlobalGameData","\xdf","\x73","\xb7","\xa4"); }

		static void __boot();
		static  ::gameObjects::God vGod;
		static  ::gameObjects::Player1 vPlayer1;
		static  ::flixel::tile::FlxTilemap vMap;
		static int cTileIndexCoins;
		static int cTileIndexNonCollision;
		static int cTileIndexNonCollisionBlack;
		static int cTileSize;
		static void clear();
		static ::Dynamic clear_dyn();

		static bool thereIsPlayer(Float aSizeOfSurface,int aX,int aY);
		static ::Dynamic thereIsPlayer_dyn();

		static bool itsOnASurface(Float aSizeOfSurface,int aX,int aY);
		static ::Dynamic itsOnASurface_dyn();

		static bool thereIsACoinHere(Float anX,Float anY, ::flixel::group::FlxTypedGroup otherCoins,Float aRad);
		static ::Dynamic thereIsACoinHere_dyn();

};


#endif /* INCLUDED_GlobalGameData */ 
