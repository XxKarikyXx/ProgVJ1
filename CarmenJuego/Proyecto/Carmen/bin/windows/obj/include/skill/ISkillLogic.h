// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_skill_ISkillLogic
#define INCLUDED_skill_ISkillLogic

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(skill,FlxButtonAnimationSkill)
HX_DECLARE_CLASS1(skill,ISkillLogic)

namespace skill{


class HXCPP_CLASS_ATTRIBUTES ISkillLogic_obj {
	public:
		typedef hx::Object super;
		HX_DO_INTERFACE_RTTI;

		void (hx::Object :: *_hx_preparationSkill)(); 
		static inline void preparationSkill( ::Dynamic _hx_) {
			(_hx_.mPtr->*( static_cast< ::skill::ISkillLogic_obj *>(_hx_.mPtr->_hx_getInterface(0xddb348c5)))->_hx_preparationSkill)();
		}
		bool (hx::Object :: *_hx_skillExecution)(); 
		static inline bool skillExecution( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::skill::ISkillLogic_obj *>(_hx_.mPtr->_hx_getInterface(0xddb348c5)))->_hx_skillExecution)();
		}
		void (hx::Object :: *_hx_skillReset)(); 
		static inline void skillReset( ::Dynamic _hx_) {
			(_hx_.mPtr->*( static_cast< ::skill::ISkillLogic_obj *>(_hx_.mPtr->_hx_getInterface(0xddb348c5)))->_hx_skillReset)();
		}
		void (hx::Object :: *_hx_skillUpdateValidation)(); 
		static inline void skillUpdateValidation( ::Dynamic _hx_) {
			(_hx_.mPtr->*( static_cast< ::skill::ISkillLogic_obj *>(_hx_.mPtr->_hx_getInterface(0xddb348c5)))->_hx_skillUpdateValidation)();
		}
};

} // end namespace skill

#endif /* INCLUDED_skill_ISkillLogic */ 
