// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_gameObjects_Player1
#define INCLUDED_gameObjects_Player1

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,_hx_system,FlxSound)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(gameObjects,Player1)

namespace gameObjects{


class HXCPP_CLASS_ATTRIBUTES Player1_obj : public  ::flixel::FlxSprite_obj
{
	public:
		typedef  ::flixel::FlxSprite_obj super;
		typedef Player1_obj OBJ_;
		Player1_obj();

	public:
		enum { _hx_ClassId = 0x54c91c56 };

		void __construct(Float aX,Float aY);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="gameObjects.Player1")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"gameObjects.Player1"); }
		static hx::ObjectPtr< Player1_obj > __new(Float aX,Float aY);
		static hx::ObjectPtr< Player1_obj > __alloc(hx::Ctx *_hx_ctx,Float aX,Float aY);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Player1_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Player1","\x90","\x31","\x66","\x57"); }

		static void __boot();
		static int cAccelerationx;
		static int cVelocityx;
		static int cVelocityy;
		int vJumpOnAirCount;
		int vCoinsCount;
		 ::flixel::group::FlxTypedGroup vProjectiles;
		int vProjectilesCount;
		 ::flixel::group::FlxTypedGroup vCoins;
		::String vState;
		Float vStateDuration;
		 ::flixel::_hx_system::FlxSound vJumpSound;
		void intanceProjectiles();
		::Dynamic intanceProjectiles_dyn();

		void setCoins( ::flixel::group::FlxTypedGroup aCoins);
		::Dynamic setCoins_dyn();

		 ::flixel::group::FlxTypedGroup set_vProjectiles( ::flixel::group::FlxTypedGroup aProjectiles);
		::Dynamic set_vProjectiles_dyn();

		void create();
		::Dynamic create_dyn();

		void update(Float aDt);

		void normalPlayerMovement(Float aDt);
		::Dynamic normalPlayerMovement_dyn();

		void playerStunned(Float aDt);
		::Dynamic playerStunned_dyn();

		int set_vCoinsCount(int value);
		::Dynamic set_vCoinsCount_dyn();

		int get_vCoinsCount();
		::Dynamic get_vCoinsCount_dyn();

		void destroy();

};

} // end namespace gameObjects

#endif /* INCLUDED_gameObjects_Player1 */ 
