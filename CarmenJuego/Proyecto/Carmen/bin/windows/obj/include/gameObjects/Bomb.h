// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_gameObjects_Bomb
#define INCLUDED_gameObjects_Bomb

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(gameObjects,Bomb)

namespace gameObjects{


class HXCPP_CLASS_ATTRIBUTES Bomb_obj : public  ::flixel::FlxSprite_obj
{
	public:
		typedef  ::flixel::FlxSprite_obj super;
		typedef Bomb_obj OBJ_;
		Bomb_obj();

	public:
		enum { _hx_ClassId = 0x40474dc4 };

		void __construct( ::Dynamic __o_aX, ::Dynamic __o_aY, ::Dynamic __o_aRad);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="gameObjects.Bomb")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"gameObjects.Bomb"); }
		static hx::ObjectPtr< Bomb_obj > __new( ::Dynamic __o_aX, ::Dynamic __o_aY, ::Dynamic __o_aRad);
		static hx::ObjectPtr< Bomb_obj > __alloc(hx::Ctx *_hx_ctx, ::Dynamic __o_aX, ::Dynamic __o_aY, ::Dynamic __o_aRad);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Bomb_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Bomb","\x82","\xae","\xf4","\x2b"); }

		bool vCanCollide;
		void update(Float aDt);

		void destroy();

};

} // end namespace gameObjects

#endif /* INCLUDED_gameObjects_Bomb */ 
