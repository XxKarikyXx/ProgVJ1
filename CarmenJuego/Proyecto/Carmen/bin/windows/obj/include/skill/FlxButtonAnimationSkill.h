// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_skill_FlxButtonAnimationSkill
#define INCLUDED_skill_FlxButtonAnimationSkill

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,math,FlxPoint)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS2(flixel,util,IFlxPooled)
HX_DECLARE_CLASS1(skill,FlxButtonAnimationSkill)

namespace skill{


class HXCPP_CLASS_ATTRIBUTES FlxButtonAnimationSkill_obj : public  ::flixel::FlxSprite_obj
{
	public:
		typedef  ::flixel::FlxSprite_obj super;
		typedef FlxButtonAnimationSkill_obj OBJ_;
		FlxButtonAnimationSkill_obj();

	public:
		enum { _hx_ClassId = 0x03b82148 };

		void __construct(::String aImagePath,int aAnimationWidth,int aAnimationHeight, ::Dynamic aOnPressed, ::Dynamic aOnPressedActive, ::Dynamic aOnOver, ::Dynamic aCoolDown, ::flixel::text::FlxText aLabel);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="skill.FlxButtonAnimationSkill")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"skill.FlxButtonAnimationSkill"); }
		static hx::ObjectPtr< FlxButtonAnimationSkill_obj > __new(::String aImagePath,int aAnimationWidth,int aAnimationHeight, ::Dynamic aOnPressed, ::Dynamic aOnPressedActive, ::Dynamic aOnOver, ::Dynamic aCoolDown, ::flixel::text::FlxText aLabel);
		static hx::ObjectPtr< FlxButtonAnimationSkill_obj > __alloc(hx::Ctx *_hx_ctx,::String aImagePath,int aAnimationWidth,int aAnimationHeight, ::Dynamic aOnPressed, ::Dynamic aOnPressedActive, ::Dynamic aOnOver, ::Dynamic aCoolDown, ::flixel::text::FlxText aLabel);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~FlxButtonAnimationSkill_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("FlxButtonAnimationSkill","\xf1","\x9e","\x8a","\x22"); }

		int vCoolDown;
		Float vTimerCoolDown;
		bool vActiveButton;
		 ::Dynamic vOnPressedActive;
		Dynamic vOnPressedActive_dyn() { return vOnPressedActive;}
		 ::Dynamic vOnOver;
		Dynamic vOnOver_dyn() { return vOnOver;}
		 ::flixel::text::FlxText vLabel;
		 ::Dynamic vOnPressed;
		Dynamic vOnPressed_dyn() { return vOnPressed;}
		bool vEnabled;
		 ::flixel::math::FlxPoint vMousePosition;
		void updateLabel(::String atext);
		::Dynamic updateLabel_dyn();

		void setCooldown(::Array< int > aFrames,hx::Null< bool >  aLoop,hx::Null< int >  aFrameRate);
		::Dynamic setCooldown_dyn();

		void setDisabled(::Array< int > aFrames,hx::Null< bool >  aLoop,hx::Null< int >  aFrameRate);
		::Dynamic setDisabled_dyn();

		void setUp(::Array< int > aFrames,hx::Null< bool >  aLoop,hx::Null< int >  aFrameRate);
		::Dynamic setUp_dyn();

		void setDown(::Array< int > aFrames,hx::Null< bool >  aLoop,hx::Null< int >  aFrameRate);
		::Dynamic setDown_dyn();

		void setOver(::Array< int > aFrames,hx::Null< bool >  aLoop,hx::Null< int >  aFrameRate);
		::Dynamic setOver_dyn();

		void setActivation();
		::Dynamic setActivation_dyn();

		void update(Float aDt);

		bool isTouchingButton();
		::Dynamic isTouchingButton_dyn();

		bool isOver( ::flixel::math::FlxPoint aMousePosition);
		::Dynamic isOver_dyn();

		bool isButtonClicked();
		::Dynamic isButtonClicked_dyn();

		void destroy();

};

} // end namespace skill

#endif /* INCLUDED_skill_FlxButtonAnimationSkill */ 
