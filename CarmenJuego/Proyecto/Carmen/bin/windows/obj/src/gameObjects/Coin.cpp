// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxAtlasFrames
#include <flixel/graphics/frames/FlxAtlasFrames.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxFramesCollection
#include <flixel/graphics/frames/FlxFramesCollection.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_gameObjects_Coin
#include <gameObjects/Coin.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a0dc9477c66e9214_20_new,"gameObjects.Coin","new",0xc706be0f,"gameObjects.Coin.new","gameObjects/Coin.hx",20,0xe6496a60)
HX_LOCAL_STACK_FRAME(_hx_pos_a0dc9477c66e9214_31_update,"gameObjects.Coin","update",0x96d10fba,"gameObjects.Coin.update","gameObjects/Coin.hx",31,0xe6496a60)
HX_LOCAL_STACK_FRAME(_hx_pos_a0dc9477c66e9214_36_destroy,"gameObjects.Coin","destroy",0xe6d31e29,"gameObjects.Coin.destroy","gameObjects/Coin.hx",36,0xe6496a60)
namespace gameObjects{

void Coin_obj::__construct( ::Dynamic __o_aX, ::Dynamic __o_aY){
 ::Dynamic aX = __o_aX.Default(0);
 ::Dynamic aY = __o_aY.Default(0);
            	HX_STACKFRAME(&_hx_pos_a0dc9477c66e9214_20_new)
HXLINE(  21)		super::__construct(aX,aY,null());
HXLINE(  22)		this->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(HX_("img/Sheets/moneda.png",20,a4,67,6a),HX_("img/Sheets/moneda.xml",4e,b5,6d,6a)));
HXLINE(  23)		this->animation->addByPrefix(HX_("giro",5f,0a,65,44),HX_("monedagiro_",8a,35,a4,0e),(int)12,null(),null(),null());
HXLINE(  25)		this->animation->play(HX_("giro",5f,0a,65,44),null(),null(),null());
HXLINE(  26)		this->set_width((int)32);
HXLINE(  27)		this->set_height((int)32);
            	}

Dynamic Coin_obj::__CreateEmpty() { return new Coin_obj; }

void *Coin_obj::_hx_vtable = 0;

Dynamic Coin_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Coin_obj > _hx_result = new Coin_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool Coin_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x25a685e0) {
		if (inClassId<=(int)0x0b6ffd77) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x0b6ffd77;
		} else {
			return inClassId==(int)0x25a685e0;
		}
	} else {
		return inClassId==(int)0x2e105115 || inClassId==(int)0x40f080f3;
	}
}

void Coin_obj::update(Float aDt){
            	HX_STACKFRAME(&_hx_pos_a0dc9477c66e9214_31_update)
HXDLIN(  31)		this->super::update(aDt);
            	}


void Coin_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_a0dc9477c66e9214_36_destroy)
HXDLIN(  36)		this->super::destroy();
            	}



hx::ObjectPtr< Coin_obj > Coin_obj::__new( ::Dynamic __o_aX, ::Dynamic __o_aY) {
	hx::ObjectPtr< Coin_obj > __this = new Coin_obj();
	__this->__construct(__o_aX,__o_aY);
	return __this;
}

hx::ObjectPtr< Coin_obj > Coin_obj::__alloc(hx::Ctx *_hx_ctx, ::Dynamic __o_aX, ::Dynamic __o_aY) {
	Coin_obj *__this = (Coin_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Coin_obj), true, "gameObjects.Coin"));
	*(void **)__this = Coin_obj::_hx_vtable;
	__this->__construct(__o_aX,__o_aY);
	return __this;
}

Coin_obj::Coin_obj()
{
}

hx::Val Coin_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Coin_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Coin_obj_sStaticStorageInfo = 0;
#endif

static ::String Coin_obj_sMemberFields[] = {
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	HX_HCSTRING("destroy","\xfa","\x2c","\x86","\x24"),
	::String(null()) };

static void Coin_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Coin_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Coin_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Coin_obj::__mClass,"__mClass");
};

#endif

hx::Class Coin_obj::__mClass;

void Coin_obj::__register()
{
	hx::Object *dummy = new Coin_obj;
	Coin_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("gameObjects.Coin","\x9d","\x0a","\x15","\x12");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Coin_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Coin_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Coin_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Coin_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Coin_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Coin_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace gameObjects
