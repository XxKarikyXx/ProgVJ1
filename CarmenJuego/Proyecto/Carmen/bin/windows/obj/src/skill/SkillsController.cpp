// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_skill_FlxButtonAnimationSkill
#include <skill/FlxButtonAnimationSkill.h>
#endif
#ifndef INCLUDED_skill_ISkillLogic
#include <skill/ISkillLogic.h>
#endif
#ifndef INCLUDED_skill_SkillLogicBomb
#include <skill/SkillLogicBomb.h>
#endif
#ifndef INCLUDED_skill_SkillLogicProjectil
#include <skill/SkillLogicProjectil.h>
#endif
#ifndef INCLUDED_skill_SkillLogicTrap
#include <skill/SkillLogicTrap.h>
#endif
#ifndef INCLUDED_skill_SkillsController
#include <skill/SkillsController.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_37_new,"skill.SkillsController","new",0x755aa70d,"skill.SkillsController.new","skill/SkillsController.hx",37,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_41_createAndAddSkills,"skill.SkillsController","createAndAddSkills",0x9690c1fb,"skill.SkillsController.createAndAddSkills","skill/SkillsController.hx",41,0xbf505da2)
static const int _hx_array_data_98c51c9b_2[] = {
	(int)1,
};
static const int _hx_array_data_98c51c9b_3[] = {
	(int)0,
};
static const int _hx_array_data_98c51c9b_4[] = {
	(int)2,
};
static const int _hx_array_data_98c51c9b_5[] = {
	(int)3,
};
static const int _hx_array_data_98c51c9b_6[] = {
	(int)4,
};
static const int _hx_array_data_98c51c9b_7[] = {
	(int)1,
};
static const int _hx_array_data_98c51c9b_8[] = {
	(int)0,
};
static const int _hx_array_data_98c51c9b_9[] = {
	(int)2,
};
static const int _hx_array_data_98c51c9b_10[] = {
	(int)3,
};
static const int _hx_array_data_98c51c9b_11[] = {
	(int)4,
};
static const int _hx_array_data_98c51c9b_12[] = {
	(int)1,
};
static const int _hx_array_data_98c51c9b_13[] = {
	(int)0,
};
static const int _hx_array_data_98c51c9b_14[] = {
	(int)2,
};
static const int _hx_array_data_98c51c9b_15[] = {
	(int)3,
};
static const int _hx_array_data_98c51c9b_16[] = {
	(int)4,
};
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_92_onClickSkill1,"skill.SkillsController","onClickSkill1",0xab0c8df6,"skill.SkillsController.onClickSkill1","skill/SkillsController.hx",92,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_99_onClickSkill3,"skill.SkillsController","onClickSkill3",0xab0c8df8,"skill.SkillsController.onClickSkill3","skill/SkillsController.hx",99,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_107_onOverSkill3,"skill.SkillsController","onOverSkill3",0x874413a8,"skill.SkillsController.onOverSkill3","skill/SkillsController.hx",107,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_112_onClickSkillActive,"skill.SkillsController","onClickSkillActive",0x2a7d1e01,"skill.SkillsController.onClickSkillActive","skill/SkillsController.hx",112,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_123_onOverSkill1,"skill.SkillsController","onOverSkill1",0x874413a6,"skill.SkillsController.onOverSkill1","skill/SkillsController.hx",123,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_127_onClickSkill2,"skill.SkillsController","onClickSkill2",0xab0c8df7,"skill.SkillsController.onClickSkill2","skill/SkillsController.hx",127,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_135_onOverSkill2,"skill.SkillsController","onOverSkill2",0x874413a7,"skill.SkillsController.onOverSkill2","skill/SkillsController.hx",135,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_140_thereAreSkillsTouching,"skill.SkillsController","thereAreSkillsTouching",0xf3bea248,"skill.SkillsController.thereAreSkillsTouching","skill/SkillsController.hx",140,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_145_runGodSkill,"skill.SkillsController","runGodSkill",0x2088b4cd,"skill.SkillsController.runGodSkill","skill/SkillsController.hx",145,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_158_validateSkillsConditions,"skill.SkillsController","validateSkillsConditions",0x3d59b7c3,"skill.SkillsController.validateSkillsConditions","skill/SkillsController.hx",158,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_166_get_vTraps,"skill.SkillsController","get_vTraps",0x7228164c,"skill.SkillsController.get_vTraps","skill/SkillsController.hx",166,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_171_set_vTraps,"skill.SkillsController","set_vTraps",0x75a5b4c0,"skill.SkillsController.set_vTraps","skill/SkillsController.hx",171,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_176_get_vProjectiles,"skill.SkillsController","get_vProjectiles",0x3ea47350,"skill.SkillsController.get_vProjectiles","skill/SkillsController.hx",176,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_181_set_vProjectiles,"skill.SkillsController","set_vProjectiles",0x94e660c4,"skill.SkillsController.set_vProjectiles","skill/SkillsController.hx",181,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_186_get_vSkills,"skill.SkillsController","get_vSkills",0x0808a69c,"skill.SkillsController.get_vSkills","skill/SkillsController.hx",186,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_191_set_vSkills,"skill.SkillsController","set_vSkills",0x1275ada8,"skill.SkillsController.set_vSkills","skill/SkillsController.hx",191,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_196_get_vTextSkillDescription,"skill.SkillsController","get_vTextSkillDescription",0x97513c12,"skill.SkillsController.get_vTextSkillDescription","skill/SkillsController.hx",196,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_201_set_vTextSkillDescription,"skill.SkillsController","set_vTextSkillDescription",0x03a8001e,"skill.SkillsController.set_vTextSkillDescription","skill/SkillsController.hx",201,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_206_get_vSkillsCountDownText,"skill.SkillsController","get_vSkillsCountDownText",0xd2a569e2,"skill.SkillsController.get_vSkillsCountDownText","skill/SkillsController.hx",206,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_211_set_vSkillsCountDownText,"skill.SkillsController","set_vSkillsCountDownText",0xe57feb56,"skill.SkillsController.set_vSkillsCountDownText","skill/SkillsController.hx",211,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_216_get_vBombs,"skill.SkillsController","get_vBombs",0x12ff1037,"skill.SkillsController.get_vBombs","skill/SkillsController.hx",216,0xbf505da2)
HX_LOCAL_STACK_FRAME(_hx_pos_c8d38f01f1c1ae9c_221_set_vBombs,"skill.SkillsController","set_vBombs",0x167caeab,"skill.SkillsController.set_vBombs","skill/SkillsController.hx",221,0xbf505da2)
namespace skill{

void SkillsController_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_37_new)
            	}

Dynamic SkillsController_obj::__CreateEmpty() { return new SkillsController_obj; }

void *SkillsController_obj::_hx_vtable = 0;

Dynamic SkillsController_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< SkillsController_obj > _hx_result = new SkillsController_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool SkillsController_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x68e349af;
}

void SkillsController_obj::createAndAddSkills(){
            	HX_GC_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_41_createAndAddSkills)
HXLINE(  42)		 ::flixel::text::FlxText textSkill1FlxText =  ::flixel::text::FlxText_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null());
HXLINE(  43)		 ::skill::FlxButtonAnimationSkill skill1 =  ::skill::FlxButtonAnimationSkill_obj::__alloc( HX_CTX ,HX_("assets/img/Skills/balaplacebo.png",c6,e3,df,07),(int)57,(int)64,this->onClickSkill1_dyn(),this->onClickSkillActive_dyn(),this->onOverSkill1_dyn(),(int)3,textSkill1FlxText);
HXLINE(  44)		skill1->setOver(::Array_obj< int >::fromData( _hx_array_data_98c51c9b_2,1),null(),null());
HXLINE(  45)		skill1->setUp(::Array_obj< int >::fromData( _hx_array_data_98c51c9b_3,1),null(),null());
HXLINE(  46)		skill1->setDown(::Array_obj< int >::fromData( _hx_array_data_98c51c9b_4,1),null(),null());
HXLINE(  47)		skill1->setCooldown(::Array_obj< int >::fromData( _hx_array_data_98c51c9b_5,1),null(),null());
HXLINE(  48)		skill1->setDisabled(::Array_obj< int >::fromData( _hx_array_data_98c51c9b_6,1),null(),null());
HXLINE(  49)		skill1->setPosition((int)1655,(int)50);
HXLINE(  50)		this->get_vSkills()->add(skill1).StaticCast<  ::flixel::FlxBasic >();
HXLINE(  51)		this->get_vSkillsCountDownText()->add(textSkill1FlxText).StaticCast<  ::flixel::FlxBasic >();
HXLINE(  53)		 ::skill::SkillLogicProjectil skillProjectil =  ::skill::SkillLogicProjectil_obj::__alloc( HX_CTX ,HX_("Dispara un proyectil en la direcci\xc3""\xb3""n donde se haga click.    Cooldown: 3s",69,57,b5,6e));
HXLINE(  54)		skillProjectil->vSkillButton = skill1;
HXLINE(  55)		skillProjectil->vProjectiles = this->get_vProjectiles();
HXLINE(  56)		this->vSkill1 = skillProjectil;
HXLINE(  58)		 ::flixel::text::FlxText textSkill2FlxText =  ::flixel::text::FlxText_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null());
HXLINE(  59)		 ::skill::FlxButtonAnimationSkill skill2 =  ::skill::FlxButtonAnimationSkill_obj::__alloc( HX_CTX ,HX_("assets/img/Skills/balaplacebo.png",c6,e3,df,07),(int)57,(int)64,this->onClickSkill2_dyn(),this->onClickSkillActive_dyn(),this->onOverSkill2_dyn(),(int)40,textSkill2FlxText);
HXLINE(  60)		skill2->setOver(::Array_obj< int >::fromData( _hx_array_data_98c51c9b_7,1),null(),null());
HXLINE(  61)		skill2->setUp(::Array_obj< int >::fromData( _hx_array_data_98c51c9b_8,1),null(),null());
HXLINE(  62)		skill2->setDown(::Array_obj< int >::fromData( _hx_array_data_98c51c9b_9,1),null(),null());
HXLINE(  63)		skill2->setCooldown(::Array_obj< int >::fromData( _hx_array_data_98c51c9b_10,1),null(),null());
HXLINE(  64)		skill2->setDisabled(::Array_obj< int >::fromData( _hx_array_data_98c51c9b_11,1),null(),null());
HXLINE(  65)		skill2->setPosition((int)1740,(int)50);
HXLINE(  66)		this->get_vSkills()->add(skill2).StaticCast<  ::flixel::FlxBasic >();
HXLINE(  67)		this->get_vSkillsCountDownText()->add(textSkill2FlxText).StaticCast<  ::flixel::FlxBasic >();
HXLINE(  69)		 ::skill::SkillLogicTrap skillTrap =  ::skill::SkillLogicTrap_obj::__alloc( HX_CTX ,HX_("Pone una trampa en una superficie que inmoviliza.    Cooldown: 40s",88,f5,18,a1));
HXLINE(  70)		skillTrap->vSkillButton = skill2;
HXLINE(  71)		skillTrap->vTraps = this->get_vTraps();
HXLINE(  72)		this->vSkill2 = skillTrap;
HXLINE(  74)		 ::flixel::text::FlxText textSkill3FlxText =  ::flixel::text::FlxText_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null());
HXLINE(  75)		 ::skill::FlxButtonAnimationSkill skill3 =  ::skill::FlxButtonAnimationSkill_obj::__alloc( HX_CTX ,HX_("assets/img/Skills/balaplacebo.png",c6,e3,df,07),(int)57,(int)64,this->onClickSkill3_dyn(),this->onClickSkillActive_dyn(),this->onOverSkill3_dyn(),(int)8,textSkill3FlxText);
HXLINE(  76)		skill3->setOver(::Array_obj< int >::fromData( _hx_array_data_98c51c9b_12,1),null(),null());
HXLINE(  77)		skill3->setUp(::Array_obj< int >::fromData( _hx_array_data_98c51c9b_13,1),null(),null());
HXLINE(  78)		skill3->setDown(::Array_obj< int >::fromData( _hx_array_data_98c51c9b_14,1),null(),null());
HXLINE(  79)		skill3->setCooldown(::Array_obj< int >::fromData( _hx_array_data_98c51c9b_15,1),null(),null());
HXLINE(  80)		skill3->setDisabled(::Array_obj< int >::fromData( _hx_array_data_98c51c9b_16,1),null(),null());
HXLINE(  81)		skill3->setPosition((int)1825,(int)50);
HXLINE(  82)		this->get_vSkills()->add(skill3).StaticCast<  ::flixel::FlxBasic >();
HXLINE(  83)		this->get_vSkillsCountDownText()->add(textSkill3FlxText).StaticCast<  ::flixel::FlxBasic >();
HXLINE(  85)		 ::skill::SkillLogicBomb skillBomb =  ::skill::SkillLogicBomb_obj::__alloc( HX_CTX ,HX_("Tira una bomba que pega bien duro al que toca. Cooldown: 8s",ec,17,5f,aa));
HXLINE(  86)		skillBomb->vSkillButton = skill3;
HXLINE(  87)		skillBomb->vBombs = this->get_vBombs();
HXLINE(  88)		this->vSkill3 = skillBomb;
            	}


HX_DEFINE_DYNAMIC_FUNC0(SkillsController_obj,createAndAddSkills,(void))

void SkillsController_obj::onClickSkill1( ::skill::FlxButtonAnimationSkill aButton){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_92_onClickSkill1)
HXLINE(  93)		this->onClickSkillActive(aButton);
HXLINE(  94)		::skill::ISkillLogic_obj::preparationSkill(this->vSkill1);
HXLINE(  95)		this->vActiveSkill = this->vSkill1;
            	}


HX_DEFINE_DYNAMIC_FUNC1(SkillsController_obj,onClickSkill1,(void))

void SkillsController_obj::onClickSkill3( ::skill::FlxButtonAnimationSkill aButton){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_99_onClickSkill3)
HXLINE( 100)		this->onClickSkillActive(aButton);
HXLINE( 101)		::skill::ISkillLogic_obj::preparationSkill(this->vSkill3);
HXLINE( 102)		this->vActiveSkill = this->vSkill3;
            	}


HX_DEFINE_DYNAMIC_FUNC1(SkillsController_obj,onClickSkill3,(void))

void SkillsController_obj::onOverSkill3( ::skill::FlxButtonAnimationSkill aButton){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_107_onOverSkill3)
HXDLIN( 107)		this->get_vTextSkillDescription()->set_text(( (::String)(this->vSkill3->__Field(HX_("vTextDescription",79,65,6d,41),hx::paccDynamic)) ));
            	}


HX_DEFINE_DYNAMIC_FUNC1(SkillsController_obj,onOverSkill3,(void))

void SkillsController_obj::onClickSkillActive( ::skill::FlxButtonAnimationSkill aButton){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_112_onClickSkillActive)
HXDLIN( 112)		if (hx::IsNotNull( this->vActiveSkill )) {
HXLINE( 114)			::skill::ISkillLogic_obj::skillReset(this->vActiveSkill);
HXLINE( 115)			( ( ::skill::FlxButtonAnimationSkill)(this->vActiveSkill->__Field(HX_("vSkillButton",8d,8d,48,b5),hx::paccDynamic)) )->vActiveButton = false;
HXLINE( 116)			( ( ::flixel::FlxSprite)(this->vActiveSkill->__Field(HX_("vSkillButton",8d,8d,48,b5),hx::paccDynamic)) )->animation->play(HX_("up",5b,66,00,00),null(),null(),null());
HXLINE( 117)			this->vActiveSkill = null();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(SkillsController_obj,onClickSkillActive,(void))

void SkillsController_obj::onOverSkill1( ::skill::FlxButtonAnimationSkill aButton){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_123_onOverSkill1)
HXDLIN( 123)		this->get_vTextSkillDescription()->set_text(( (::String)(this->vSkill1->__Field(HX_("vTextDescription",79,65,6d,41),hx::paccDynamic)) ));
            	}


HX_DEFINE_DYNAMIC_FUNC1(SkillsController_obj,onOverSkill1,(void))

void SkillsController_obj::onClickSkill2( ::skill::FlxButtonAnimationSkill aButton){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_127_onClickSkill2)
HXLINE( 128)		this->onClickSkillActive(aButton);
HXLINE( 129)		::skill::ISkillLogic_obj::preparationSkill(this->vSkill2);
HXLINE( 130)		this->vActiveSkill = this->vSkill2;
            	}


HX_DEFINE_DYNAMIC_FUNC1(SkillsController_obj,onClickSkill2,(void))

void SkillsController_obj::onOverSkill2( ::skill::FlxButtonAnimationSkill aButton){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_135_onOverSkill2)
HXDLIN( 135)		this->get_vTextSkillDescription()->set_text(( (::String)(this->vSkill2->__Field(HX_("vTextDescription",79,65,6d,41),hx::paccDynamic)) ));
            	}


HX_DEFINE_DYNAMIC_FUNC1(SkillsController_obj,onOverSkill2,(void))

bool SkillsController_obj::thereAreSkillsTouching(){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_140_thereAreSkillsTouching)
HXDLIN( 140)		bool _hx_tmp;
HXDLIN( 140)		if (!(( ( ::skill::FlxButtonAnimationSkill)(this->vSkill2->__Field(HX_("vSkillButton",8d,8d,48,b5),hx::paccDynamic)) )->isTouchingButton())) {
HXDLIN( 140)			_hx_tmp = ( ( ::skill::FlxButtonAnimationSkill)(this->vSkill1->__Field(HX_("vSkillButton",8d,8d,48,b5),hx::paccDynamic)) )->isTouchingButton();
            		}
            		else {
HXDLIN( 140)			_hx_tmp = true;
            		}
HXDLIN( 140)		if (!(_hx_tmp)) {
HXDLIN( 140)			return ( ( ::skill::FlxButtonAnimationSkill)(this->vSkill3->__Field(HX_("vSkillButton",8d,8d,48,b5),hx::paccDynamic)) )->isTouchingButton();
            		}
            		else {
HXDLIN( 140)			return true;
            		}
HXDLIN( 140)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(SkillsController_obj,thereAreSkillsTouching,return )

void SkillsController_obj::runGodSkill(int aX,int aY){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_145_runGodSkill)
HXDLIN( 145)		if (!(this->thereAreSkillsTouching())) {
HXLINE( 147)			bool reset = ::skill::ISkillLogic_obj::skillExecution(this->vActiveSkill);
HXLINE( 149)			if (reset) {
HXLINE( 151)				this->vActiveSkill = null();
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(SkillsController_obj,runGodSkill,(void))

void SkillsController_obj::validateSkillsConditions(){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_158_validateSkillsConditions)
HXDLIN( 158)		if (hx::IsNotNull( this->vActiveSkill )) {
HXLINE( 160)			::skill::ISkillLogic_obj::skillUpdateValidation(this->vActiveSkill);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(SkillsController_obj,validateSkillsConditions,(void))

 ::flixel::group::FlxTypedGroup SkillsController_obj::get_vTraps(){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_166_get_vTraps)
HXDLIN( 166)		return this->vTraps;
            	}


HX_DEFINE_DYNAMIC_FUNC0(SkillsController_obj,get_vTraps,return )

 ::flixel::group::FlxTypedGroup SkillsController_obj::set_vTraps( ::flixel::group::FlxTypedGroup value){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_171_set_vTraps)
HXDLIN( 171)		return (this->vTraps = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(SkillsController_obj,set_vTraps,return )

 ::flixel::group::FlxTypedGroup SkillsController_obj::get_vProjectiles(){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_176_get_vProjectiles)
HXDLIN( 176)		return this->vProjectiles;
            	}


HX_DEFINE_DYNAMIC_FUNC0(SkillsController_obj,get_vProjectiles,return )

 ::flixel::group::FlxTypedGroup SkillsController_obj::set_vProjectiles( ::flixel::group::FlxTypedGroup value){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_181_set_vProjectiles)
HXDLIN( 181)		return (this->vProjectiles = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(SkillsController_obj,set_vProjectiles,return )

 ::flixel::group::FlxTypedGroup SkillsController_obj::get_vSkills(){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_186_get_vSkills)
HXDLIN( 186)		return this->vSkills;
            	}


HX_DEFINE_DYNAMIC_FUNC0(SkillsController_obj,get_vSkills,return )

 ::flixel::group::FlxTypedGroup SkillsController_obj::set_vSkills( ::flixel::group::FlxTypedGroup value){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_191_set_vSkills)
HXDLIN( 191)		return (this->vSkills = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(SkillsController_obj,set_vSkills,return )

 ::flixel::text::FlxText SkillsController_obj::get_vTextSkillDescription(){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_196_get_vTextSkillDescription)
HXDLIN( 196)		return this->vTextSkillDescription;
            	}


HX_DEFINE_DYNAMIC_FUNC0(SkillsController_obj,get_vTextSkillDescription,return )

 ::flixel::text::FlxText SkillsController_obj::set_vTextSkillDescription( ::flixel::text::FlxText value){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_201_set_vTextSkillDescription)
HXDLIN( 201)		return (this->vTextSkillDescription = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(SkillsController_obj,set_vTextSkillDescription,return )

 ::flixel::group::FlxTypedGroup SkillsController_obj::get_vSkillsCountDownText(){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_206_get_vSkillsCountDownText)
HXDLIN( 206)		return this->vSkillsCountDownText;
            	}


HX_DEFINE_DYNAMIC_FUNC0(SkillsController_obj,get_vSkillsCountDownText,return )

 ::flixel::group::FlxTypedGroup SkillsController_obj::set_vSkillsCountDownText( ::flixel::group::FlxTypedGroup value){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_211_set_vSkillsCountDownText)
HXDLIN( 211)		return (this->vSkillsCountDownText = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(SkillsController_obj,set_vSkillsCountDownText,return )

 ::flixel::group::FlxTypedGroup SkillsController_obj::get_vBombs(){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_216_get_vBombs)
HXDLIN( 216)		return this->vBombs;
            	}


HX_DEFINE_DYNAMIC_FUNC0(SkillsController_obj,get_vBombs,return )

 ::flixel::group::FlxTypedGroup SkillsController_obj::set_vBombs( ::flixel::group::FlxTypedGroup value){
            	HX_STACKFRAME(&_hx_pos_c8d38f01f1c1ae9c_221_set_vBombs)
HXDLIN( 221)		return (this->vBombs = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(SkillsController_obj,set_vBombs,return )


hx::ObjectPtr< SkillsController_obj > SkillsController_obj::__new() {
	hx::ObjectPtr< SkillsController_obj > __this = new SkillsController_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< SkillsController_obj > SkillsController_obj::__alloc(hx::Ctx *_hx_ctx) {
	SkillsController_obj *__this = (SkillsController_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(SkillsController_obj), true, "skill.SkillsController"));
	*(void **)__this = SkillsController_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

SkillsController_obj::SkillsController_obj()
{
}

void SkillsController_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(SkillsController);
	HX_MARK_MEMBER_NAME(vSkills,"vSkills");
	HX_MARK_MEMBER_NAME(vSkillsCountDownText,"vSkillsCountDownText");
	HX_MARK_MEMBER_NAME(vTextSkillDescription,"vTextSkillDescription");
	HX_MARK_MEMBER_NAME(vSkill1,"vSkill1");
	HX_MARK_MEMBER_NAME(vSkill2,"vSkill2");
	HX_MARK_MEMBER_NAME(vSkill3,"vSkill3");
	HX_MARK_MEMBER_NAME(vActiveSkill,"vActiveSkill");
	HX_MARK_MEMBER_NAME(vTraps,"vTraps");
	HX_MARK_MEMBER_NAME(vBombs,"vBombs");
	HX_MARK_MEMBER_NAME(vProjectiles,"vProjectiles");
	HX_MARK_END_CLASS();
}

void SkillsController_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(vSkills,"vSkills");
	HX_VISIT_MEMBER_NAME(vSkillsCountDownText,"vSkillsCountDownText");
	HX_VISIT_MEMBER_NAME(vTextSkillDescription,"vTextSkillDescription");
	HX_VISIT_MEMBER_NAME(vSkill1,"vSkill1");
	HX_VISIT_MEMBER_NAME(vSkill2,"vSkill2");
	HX_VISIT_MEMBER_NAME(vSkill3,"vSkill3");
	HX_VISIT_MEMBER_NAME(vActiveSkill,"vActiveSkill");
	HX_VISIT_MEMBER_NAME(vTraps,"vTraps");
	HX_VISIT_MEMBER_NAME(vBombs,"vBombs");
	HX_VISIT_MEMBER_NAME(vProjectiles,"vProjectiles");
}

hx::Val SkillsController_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"vTraps") ) { return hx::Val( inCallProp == hx::paccAlways ? get_vTraps() : vTraps ); }
		if (HX_FIELD_EQ(inName,"vBombs") ) { return hx::Val( inCallProp == hx::paccAlways ? get_vBombs() : vBombs ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"vSkills") ) { return hx::Val( inCallProp == hx::paccAlways ? get_vSkills() : vSkills ); }
		if (HX_FIELD_EQ(inName,"vSkill1") ) { return hx::Val( vSkill1 ); }
		if (HX_FIELD_EQ(inName,"vSkill2") ) { return hx::Val( vSkill2 ); }
		if (HX_FIELD_EQ(inName,"vSkill3") ) { return hx::Val( vSkill3 ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_vTraps") ) { return hx::Val( get_vTraps_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_vTraps") ) { return hx::Val( set_vTraps_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_vBombs") ) { return hx::Val( get_vBombs_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_vBombs") ) { return hx::Val( set_vBombs_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"runGodSkill") ) { return hx::Val( runGodSkill_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_vSkills") ) { return hx::Val( get_vSkills_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_vSkills") ) { return hx::Val( set_vSkills_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"vActiveSkill") ) { return hx::Val( vActiveSkill ); }
		if (HX_FIELD_EQ(inName,"vProjectiles") ) { return hx::Val( inCallProp == hx::paccAlways ? get_vProjectiles() : vProjectiles ); }
		if (HX_FIELD_EQ(inName,"onOverSkill3") ) { return hx::Val( onOverSkill3_dyn() ); }
		if (HX_FIELD_EQ(inName,"onOverSkill1") ) { return hx::Val( onOverSkill1_dyn() ); }
		if (HX_FIELD_EQ(inName,"onOverSkill2") ) { return hx::Val( onOverSkill2_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"onClickSkill1") ) { return hx::Val( onClickSkill1_dyn() ); }
		if (HX_FIELD_EQ(inName,"onClickSkill3") ) { return hx::Val( onClickSkill3_dyn() ); }
		if (HX_FIELD_EQ(inName,"onClickSkill2") ) { return hx::Val( onClickSkill2_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"get_vProjectiles") ) { return hx::Val( get_vProjectiles_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_vProjectiles") ) { return hx::Val( set_vProjectiles_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"createAndAddSkills") ) { return hx::Val( createAndAddSkills_dyn() ); }
		if (HX_FIELD_EQ(inName,"onClickSkillActive") ) { return hx::Val( onClickSkillActive_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"vSkillsCountDownText") ) { return hx::Val( inCallProp == hx::paccAlways ? get_vSkillsCountDownText() : vSkillsCountDownText ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"vTextSkillDescription") ) { return hx::Val( inCallProp == hx::paccAlways ? get_vTextSkillDescription() : vTextSkillDescription ); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"thereAreSkillsTouching") ) { return hx::Val( thereAreSkillsTouching_dyn() ); }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"validateSkillsConditions") ) { return hx::Val( validateSkillsConditions_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_vSkillsCountDownText") ) { return hx::Val( get_vSkillsCountDownText_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_vSkillsCountDownText") ) { return hx::Val( set_vSkillsCountDownText_dyn() ); }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"get_vTextSkillDescription") ) { return hx::Val( get_vTextSkillDescription_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_vTextSkillDescription") ) { return hx::Val( set_vTextSkillDescription_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val SkillsController_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"vTraps") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_vTraps(inValue.Cast<  ::flixel::group::FlxTypedGroup >()) );vTraps=inValue.Cast<  ::flixel::group::FlxTypedGroup >(); return inValue; }
		if (HX_FIELD_EQ(inName,"vBombs") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_vBombs(inValue.Cast<  ::flixel::group::FlxTypedGroup >()) );vBombs=inValue.Cast<  ::flixel::group::FlxTypedGroup >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"vSkills") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_vSkills(inValue.Cast<  ::flixel::group::FlxTypedGroup >()) );vSkills=inValue.Cast<  ::flixel::group::FlxTypedGroup >(); return inValue; }
		if (HX_FIELD_EQ(inName,"vSkill1") ) { vSkill1=inValue.Cast< ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"vSkill2") ) { vSkill2=inValue.Cast< ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"vSkill3") ) { vSkill3=inValue.Cast< ::Dynamic >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"vActiveSkill") ) { vActiveSkill=inValue.Cast< ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"vProjectiles") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_vProjectiles(inValue.Cast<  ::flixel::group::FlxTypedGroup >()) );vProjectiles=inValue.Cast<  ::flixel::group::FlxTypedGroup >(); return inValue; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"vSkillsCountDownText") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_vSkillsCountDownText(inValue.Cast<  ::flixel::group::FlxTypedGroup >()) );vSkillsCountDownText=inValue.Cast<  ::flixel::group::FlxTypedGroup >(); return inValue; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"vTextSkillDescription") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_vTextSkillDescription(inValue.Cast<  ::flixel::text::FlxText >()) );vTextSkillDescription=inValue.Cast<  ::flixel::text::FlxText >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void SkillsController_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("vSkills","\xd8","\x7a","\x1d","\x3c"));
	outFields->push(HX_HCSTRING("vSkillsCountDownText","\x26","\xa0","\xbb","\xcb"));
	outFields->push(HX_HCSTRING("vTextSkillDescription","\x4e","\x81","\xaa","\x91"));
	outFields->push(HX_HCSTRING("vSkill1","\x96","\x7a","\x1d","\x3c"));
	outFields->push(HX_HCSTRING("vSkill2","\x97","\x7a","\x1d","\x3c"));
	outFields->push(HX_HCSTRING("vSkill3","\x98","\x7a","\x1d","\x3c"));
	outFields->push(HX_HCSTRING("vActiveSkill","\x15","\xb5","\xd2","\x0c"));
	outFields->push(HX_HCSTRING("vTraps","\x90","\x9d","\x69","\xd7"));
	outFields->push(HX_HCSTRING("vBombs","\x7b","\x97","\x40","\x78"));
	outFields->push(HX_HCSTRING("vProjectiles","\x94","\xc5","\xf8","\x67"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo SkillsController_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::flixel::group::FlxTypedGroup*/ ,(int)offsetof(SkillsController_obj,vSkills),HX_HCSTRING("vSkills","\xd8","\x7a","\x1d","\x3c")},
	{hx::fsObject /*::flixel::group::FlxTypedGroup*/ ,(int)offsetof(SkillsController_obj,vSkillsCountDownText),HX_HCSTRING("vSkillsCountDownText","\x26","\xa0","\xbb","\xcb")},
	{hx::fsObject /*::flixel::text::FlxText*/ ,(int)offsetof(SkillsController_obj,vTextSkillDescription),HX_HCSTRING("vTextSkillDescription","\x4e","\x81","\xaa","\x91")},
	{hx::fsObject /*::skill::ISkillLogic*/ ,(int)offsetof(SkillsController_obj,vSkill1),HX_HCSTRING("vSkill1","\x96","\x7a","\x1d","\x3c")},
	{hx::fsObject /*::skill::ISkillLogic*/ ,(int)offsetof(SkillsController_obj,vSkill2),HX_HCSTRING("vSkill2","\x97","\x7a","\x1d","\x3c")},
	{hx::fsObject /*::skill::ISkillLogic*/ ,(int)offsetof(SkillsController_obj,vSkill3),HX_HCSTRING("vSkill3","\x98","\x7a","\x1d","\x3c")},
	{hx::fsObject /*::skill::ISkillLogic*/ ,(int)offsetof(SkillsController_obj,vActiveSkill),HX_HCSTRING("vActiveSkill","\x15","\xb5","\xd2","\x0c")},
	{hx::fsObject /*::flixel::group::FlxTypedGroup*/ ,(int)offsetof(SkillsController_obj,vTraps),HX_HCSTRING("vTraps","\x90","\x9d","\x69","\xd7")},
	{hx::fsObject /*::flixel::group::FlxTypedGroup*/ ,(int)offsetof(SkillsController_obj,vBombs),HX_HCSTRING("vBombs","\x7b","\x97","\x40","\x78")},
	{hx::fsObject /*::flixel::group::FlxTypedGroup*/ ,(int)offsetof(SkillsController_obj,vProjectiles),HX_HCSTRING("vProjectiles","\x94","\xc5","\xf8","\x67")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *SkillsController_obj_sStaticStorageInfo = 0;
#endif

static ::String SkillsController_obj_sMemberFields[] = {
	HX_HCSTRING("vSkills","\xd8","\x7a","\x1d","\x3c"),
	HX_HCSTRING("vSkillsCountDownText","\x26","\xa0","\xbb","\xcb"),
	HX_HCSTRING("vTextSkillDescription","\x4e","\x81","\xaa","\x91"),
	HX_HCSTRING("vSkill1","\x96","\x7a","\x1d","\x3c"),
	HX_HCSTRING("vSkill2","\x97","\x7a","\x1d","\x3c"),
	HX_HCSTRING("vSkill3","\x98","\x7a","\x1d","\x3c"),
	HX_HCSTRING("vActiveSkill","\x15","\xb5","\xd2","\x0c"),
	HX_HCSTRING("vTraps","\x90","\x9d","\x69","\xd7"),
	HX_HCSTRING("vBombs","\x7b","\x97","\x40","\x78"),
	HX_HCSTRING("vProjectiles","\x94","\xc5","\xf8","\x67"),
	HX_HCSTRING("createAndAddSkills","\x08","\x0e","\xeb","\x96"),
	HX_HCSTRING("onClickSkill1","\x09","\xbd","\x8f","\x6e"),
	HX_HCSTRING("onClickSkill3","\x0b","\xbd","\x8f","\x6e"),
	HX_HCSTRING("onOverSkill3","\xf5","\xa7","\x82","\x9a"),
	HX_HCSTRING("onClickSkillActive","\x0e","\x6a","\xd7","\x2a"),
	HX_HCSTRING("onOverSkill1","\xf3","\xa7","\x82","\x9a"),
	HX_HCSTRING("onClickSkill2","\x0a","\xbd","\x8f","\x6e"),
	HX_HCSTRING("onOverSkill2","\xf4","\xa7","\x82","\x9a"),
	HX_HCSTRING("thereAreSkillsTouching","\xd5","\x78","\x64","\x19"),
	HX_HCSTRING("runGodSkill","\x20","\xe9","\x97","\xda"),
	HX_HCSTRING("validateSkillsConditions","\x90","\x0b","\x0c","\x79"),
	HX_HCSTRING("get_vTraps","\x59","\x0d","\xf1","\xc7"),
	HX_HCSTRING("set_vTraps","\xcd","\xab","\x6e","\xcb"),
	HX_HCSTRING("get_vProjectiles","\x1d","\xb2","\x97","\x6c"),
	HX_HCSTRING("set_vProjectiles","\x91","\x9f","\xd9","\xc2"),
	HX_HCSTRING("get_vSkills","\xef","\xda","\x17","\xc2"),
	HX_HCSTRING("set_vSkills","\xfb","\xe1","\x84","\xcc"),
	HX_HCSTRING("get_vTextSkillDescription","\xa5","\x3b","\xa8","\x97"),
	HX_HCSTRING("set_vTextSkillDescription","\xb1","\xff","\xfe","\x03"),
	HX_HCSTRING("get_vSkillsCountDownText","\xaf","\xbd","\x57","\x0e"),
	HX_HCSTRING("set_vSkillsCountDownText","\x23","\x3f","\x32","\x21"),
	HX_HCSTRING("get_vBombs","\x44","\x07","\xc8","\x68"),
	HX_HCSTRING("set_vBombs","\xb8","\xa5","\x45","\x6c"),
	::String(null()) };

static void SkillsController_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(SkillsController_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void SkillsController_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(SkillsController_obj::__mClass,"__mClass");
};

#endif

hx::Class SkillsController_obj::__mClass;

void SkillsController_obj::__register()
{
	hx::Object *dummy = new SkillsController_obj;
	SkillsController_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("skill.SkillsController","\x9b","\x1c","\xc5","\x98");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = SkillsController_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(SkillsController_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< SkillsController_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = SkillsController_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SkillsController_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SkillsController_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace skill
